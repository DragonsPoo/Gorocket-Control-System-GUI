{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":12,"numPassedTests":130,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":12,"numTotalTests":130,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1755707250403,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["SequenceEngine helpers"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine helpers mapCmd translates named valve","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707251536,"status":"passed","title":"mapCmd translates named valve"},{"ancestorTitles":["SequenceEngine helpers"],"duration":27,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine helpers mapCond parses operators and thresholds","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707251542,"status":"passed","title":"mapCond parses operators and thresholds"},{"ancestorTitles":["SequenceEngine helpers"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine helpers toSteps converts raw structure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707251570,"status":"passed","title":"toSteps converts raw structure"},{"ancestorTitles":["SequenceEngine failsafe"],"duration":2154,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine failsafe tryFailSafe writes to all unique roles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707251572,"status":"passed","title":"tryFailSafe writes to all unique roles"},{"ancestorTitles":["SequenceEngine failsafe"],"duration":1848,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine failsafe failsafe reentry is guarded","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707253727,"status":"passed","title":"failsafe reentry is guarded"},{"ancestorTitles":["SequenceEngine wait steps"],"duration":67,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine wait steps execWaitStep handles time kind","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707255575,"status":"passed","title":"execWaitStep handles time kind"}],"endTime":1755707255644,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\SequenceEngine.helpers.test.ts","startTime":1755707250760,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SOE Acceptance Tests","1. EMERG Path Verification"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 1. EMERG Path Verification ✅ EMERG injection triggers SerialManager abort methods","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707255816,"status":"passed","title":"✅ EMERG injection triggers SerialManager abort methods"},{"ancestorTitles":["SOE Acceptance Tests","1. EMERG Path Verification"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 1. EMERG Path Verification ✅ HeartbeatDaemon stop/start events occur as expected","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1755707255819,"status":"passed","title":"✅ HeartbeatDaemon stop/start events occur as expected"},{"ancestorTitles":["SOE Acceptance Tests","1. EMERG Path Verification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 1. EMERG Path Verification ✅ UI disables valve/sequence inputs during EMERG","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707255821,"status":"passed","title":"✅ UI disables valve/sequence inputs during EMERG"},{"ancestorTitles":["SOE Acceptance Tests","2. FAILSAFE Latch/Cooldown Verification"],"duration":173,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 2. FAILSAFE Latch/Cooldown Verification ✅ 10Hz tryFailSafe calls result in only one CLOSE-OPEN-OPEN cycle","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707255822,"status":"passed","title":"✅ 10Hz tryFailSafe calls result in only one CLOSE-OPEN-OPEN cycle"},{"ancestorTitles":["SOE Acceptance Tests","2. FAILSAFE Latch/Cooldown Verification"],"duration":1016,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 2. FAILSAFE Latch/Cooldown Verification ✅ inFailsafe latch remains true until EMERG_CLEARED","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707255995,"status":"passed","title":"✅ inFailsafe latch remains true until EMERG_CLEARED"},{"ancestorTitles":["SOE Acceptance Tests","3. Sequence/Delay Processing Verification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 3. Sequence/Delay Processing Verification ✅ delay <= 0 steps are NOT created","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707257011,"status":"passed","title":"✅ delay <= 0 steps are NOT created"},{"ancestorTitles":["SOE Acceptance Tests","3. Sequence/Delay Processing Verification"],"duration":62,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 3. Sequence/Delay Processing Verification ✅ time-wait operation can be interrupted by EMERG","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707257013,"status":"passed","title":"✅ time-wait operation can be interrupted by EMERG"},{"ancestorTitles":["SOE Acceptance Tests","4. Chart/Visibility Verification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 4. Chart/Visibility Verification ✅ alarm/trip lines have different styles/labels","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1755707257075,"status":"passed","title":"✅ alarm/trip lines have different styles/labels"},{"ancestorTitles":["SOE Acceptance Tests","4. Chart/Visibility Verification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 4. Chart/Visibility Verification ✅ yMax defaults to ~990 when trip unset, with safe expansion","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707257076,"status":"passed","title":"✅ yMax defaults to ~990 when trip unset, with safe expansion"},{"ancestorTitles":["SOE Acceptance Tests","4. Chart/Visibility Verification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 4. Chart/Visibility Verification ✅ PT value surge triggers smooth y-axis expansion (no flicker)","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1755707257077,"status":"passed","title":"✅ PT value surge triggers smooth y-axis expansion (no flicker)"},{"ancestorTitles":["SOE Acceptance Tests","5. Log Consistency Verification"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 5. Log Consistency Verification ✅ Empty/whitespace lines are not written to log","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707257078,"status":"passed","title":"✅ Empty/whitespace lines are not written to log"},{"ancestorTitles":["SOE Acceptance Tests","5. Log Consistency Verification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 5. Log Consistency Verification ✅ State events are marked with # for post-analysis","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707257082,"status":"passed","title":"✅ State events are marked with # for post-analysis"},{"ancestorTitles":["SOE Acceptance Tests","5. Log Consistency Verification"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 5. Log Consistency Verification ✅ Regular telemetry lines are timestamped normally","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707257083,"status":"passed","title":"✅ Regular telemetry lines are timestamped normally"},{"ancestorTitles":["SOE Acceptance Tests","6. HIL Drill Script Simulation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 6. HIL Drill Script Simulation ✅ Single instance enforcement","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707257083,"status":"passed","title":"✅ Single instance enforcement"},{"ancestorTitles":["SOE Acceptance Tests","6. HIL Drill Script Simulation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 6. HIL Drill Script Simulation ✅ Valve role deduplication during FAILSAFE","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707257084,"status":"passed","title":"✅ Valve role deduplication during FAILSAFE"},{"ancestorTitles":["SOE Acceptance Tests","6. HIL Drill Script Simulation"],"duration":436,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 6. HIL Drill Script Simulation ✅ EMERG storm handling (100ms intervals)","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707257084,"status":"passed","title":"✅ EMERG storm handling (100ms intervals)"},{"ancestorTitles":["SOE Acceptance Tests","6. HIL Drill Script Simulation"],"duration":31,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SOE Acceptance Tests 6. HIL Drill Script Simulation ✅ Sequence interruption by EMERG with manual resume requirement","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707257521,"status":"passed","title":"✅ Sequence interruption by EMERG with manual resume requirement"}],"endTime":1755707257554,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\AcceptanceTests.test.ts","startTime":1755707255661,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SequenceEngine (with real timers)"],"duration":39,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine (with real timers) 정상 시나리오: cmd ACK + 피드백 open 만족 → complete 이벤트, 에러 없음","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707257721,"status":"passed","title":"정상 시나리오: cmd ACK + 피드백 open 만족 → complete 이벤트, 에러 없음"},{"ancestorTitles":["SequenceEngine (with real timers)"],"duration":73,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine (with real timers) ACK 타임아웃 → error 이벤트 방출 및 tryFailSafe 호출, Promise reject","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707257761,"status":"passed","title":"ACK 타임아웃 → error 이벤트 방출 및 tryFailSafe 호출, Promise reject"},{"ancestorTitles":["SequenceEngine (with real timers)"],"duration":59,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceEngine (with real timers) wait 조건 타임아웃 → error 이벤트 및 tryFailSafe 호출, Promise reject","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707257834,"status":"passed","title":"wait 조건 타임아웃 → error 이벤트 및 tryFailSafe 호출, Promise reject"}],"endTime":1755707257897,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\test\\SequenceEngine.test.ts","startTime":1755707257568,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ConfigManager","load"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager load should load and validate a valid config","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258129,"status":"passed","title":"should load and validate a valid config"},{"ancestorTitles":["ConfigManager","load"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager load should reject config with alarm >= trip","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258133,"status":"passed","title":"should reject config with alarm >= trip"},{"ancestorTitles":["ConfigManager","load"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager load should reject config with negative pressure values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258142,"status":"passed","title":"should reject config with negative pressure values"},{"ancestorTitles":["ConfigManager","load"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager load should reject config with invalid schema","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258143,"status":"passed","title":"should reject config with invalid schema"},{"ancestorTitles":["ConfigManager","load"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager load should handle file read errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258146,"status":"passed","title":"should handle file read errors"},{"ancestorTitles":["ConfigManager","get"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager get should return loaded config","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258148,"status":"passed","title":"should return loaded config"},{"ancestorTitles":["ConfigManager","get"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager get should throw if config not loaded","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258160,"status":"passed","title":"should throw if config not loaded"},{"ancestorTitles":["validatePressureConfig"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"validatePressureConfig should pass valid pressure config","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258162,"status":"passed","title":"should pass valid pressure config"},{"ancestorTitles":["validatePressureConfig"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"validatePressureConfig should fail when alarm >= trip","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258163,"status":"passed","title":"should fail when alarm >= trip"},{"ancestorTitles":["validatePressureConfig"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"validatePressureConfig should fail with negative pressure values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258166,"status":"passed","title":"should fail with negative pressure values"},{"ancestorTitles":["validatePressureConfig"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"validatePressureConfig should fail with zero pressure values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707258166,"status":"passed","title":"should fail with zero pressure values"},{"ancestorTitles":["validatePressureConfig"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"validatePressureConfig should warn about missing optional fields","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707258167,"status":"passed","title":"should warn about missing optional fields"},{"ancestorTitles":["validatePressureConfig"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"validatePressureConfig should warn about unusually high pressure values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258167,"status":"passed","title":"should warn about unusually high pressure values"}],"endTime":1755707258168,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\ConfigManager.test.ts","startTime":1755707257913,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Safety Critical Edge Cases","ACK/NACK Parsing Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Safety Critical Edge Cases ACK/NACK Parsing Edge Cases should handle malformed ACK lines gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707258333,"status":"passed","title":"should handle malformed ACK lines gracefully"},{"ancestorTitles":["Safety Critical Edge Cases","ACK/NACK Parsing Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Safety Critical Edge Cases ACK/NACK Parsing Edge Cases should handle malformed NACK lines gracefully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707258334,"status":"passed","title":"should handle malformed NACK lines gracefully"},{"ancestorTitles":["Safety Critical Edge Cases","Memory Leak Prevention"],"duration":18,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Safety Critical Edge Cases Memory Leak Prevention should handle rapid EMERG/CLEARED cycles without memory leak","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258335,"status":"passed","title":"should handle rapid EMERG/CLEARED cycles without memory leak"},{"ancestorTitles":["Safety Critical Edge Cases","Memory Leak Prevention"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Safety Critical Edge Cases Memory Leak Prevention should validate failsafe cooldown and latch concepts","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1755707258353,"status":"passed","title":"should validate failsafe cooldown and latch concepts"},{"ancestorTitles":["Safety Critical Edge Cases","Configuration Validation"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Safety Critical Edge Cases Configuration Validation should reject malformed valve mapping gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707258357,"status":"passed","title":"should reject malformed valve mapping gracefully"},{"ancestorTitles":["Safety Critical Edge Cases","Configuration Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Safety Critical Edge Cases Configuration Validation should validate sensor range in mapCond","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707258373,"status":"passed","title":"should validate sensor range in mapCond"},{"ancestorTitles":["Safety Critical Edge Cases","Log Consistency"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Safety Critical Edge Cases Log Consistency should filter ACK/NACK lines and mark state events","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1755707258376,"status":"passed","title":"should filter ACK/NACK lines and mark state events"},{"ancestorTitles":["Safety Critical Edge Cases","Chart Robustness"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Safety Critical Edge Cases Chart Robustness should handle extreme pressure values in yMax calculation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707258378,"status":"passed","title":"should handle extreme pressure values in yMax calculation"}],"endTime":1755707258381,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\SafetyCritical.test.ts","startTime":1755707258196,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SequenceDataManager","loadAndValidate"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager loadAndValidate should successfully load valid sequences","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707258565,"status":"passed","title":"should successfully load valid sequences"},{"ancestorTitles":["SequenceDataManager","loadAndValidate"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager loadAndValidate should fail when sequences.json does not exist","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258568,"status":"passed","title":"should fail when sequences.json does not exist"},{"ancestorTitles":["SequenceDataManager","loadAndValidate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager loadAndValidate should fail when schema file does not exist","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258569,"status":"passed","title":"should fail when schema file does not exist"},{"ancestorTitles":["SequenceDataManager","loadAndValidate"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager loadAndValidate should fail with invalid JSON schema","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258569,"status":"passed","title":"should fail with invalid JSON schema"},{"ancestorTitles":["SequenceDataManager","loadAndValidate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager loadAndValidate should fail when Emergency Shutdown sequence is missing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258570,"status":"passed","title":"should fail when Emergency Shutdown sequence is missing"},{"ancestorTitles":["SequenceDataManager","Forbidden combinations static validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Forbidden combinations static validation should reject sequences with forbidden valve combinations in same step","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707258571,"status":"passed","title":"should reject sequences with forbidden valve combinations in same step"},{"ancestorTitles":["SequenceDataManager","Forbidden combinations static validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Forbidden combinations static validation should reject ethanol main + system vent combination","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707258571,"status":"passed","title":"should reject ethanol main + system vent combination"},{"ancestorTitles":["SequenceDataManager","Forbidden combinations static validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Forbidden combinations static validation should allow pressurant fill + system vent combination (for purge operations)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258572,"status":"passed","title":"should allow pressurant fill + system vent combination (for purge operations)"},{"ancestorTitles":["SequenceDataManager","Forbidden combinations static validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Forbidden combinations static validation should allow valid sequences without forbidden combinations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258573,"status":"passed","title":"should allow valid sequences without forbidden combinations"},{"ancestorTitles":["SequenceDataManager","Dynamic dry run validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Dynamic dry run validation should detect forbidden combinations across timeline","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707258574,"status":"passed","title":"should detect forbidden combinations across timeline"},{"ancestorTitles":["SequenceDataManager","Dynamic dry run validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Dynamic dry run validation should pass for sequences without forbidden combinations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258576,"status":"passed","title":"should pass for sequences without forbidden combinations"},{"ancestorTitles":["SequenceDataManager","Dynamic dry run validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Dynamic dry run validation should handle non-existent sequences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258577,"status":"passed","title":"should handle non-existent sequences"},{"ancestorTitles":["SequenceDataManager","Dynamic dry run validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Dynamic dry run validation should skip Emergency Shutdown in dryRunAll","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258578,"status":"passed","title":"should skip Emergency Shutdown in dryRunAll"},{"ancestorTitles":["SequenceDataManager","Timing and state tracking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Timing and state tracking should track valve states through sequence timeline","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258578,"status":"passed","title":"should track valve states through sequence timeline"},{"ancestorTitles":["SequenceDataManager","Error handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Error handling should handle file read errors gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707258579,"status":"passed","title":"should handle file read errors gracefully"},{"ancestorTitles":["SequenceDataManager","Error handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SequenceDataManager Error handling should handle malformed JSON","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258580,"status":"passed","title":"should handle malformed JSON"}],"endTime":1755707258581,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\SequenceDataManager.test.ts","startTime":1755707258396,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SerialManager Basic Tests","listPorts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests listPorts should return available ports","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258796,"status":"passed","title":"should return available ports"},{"ancestorTitles":["SerialManager Basic Tests","listPorts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests listPorts should handle empty port list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258797,"status":"passed","title":"should handle empty port list"},{"ancestorTitles":["SerialManager Basic Tests","listPorts"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests listPorts should handle port listing error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258798,"status":"passed","title":"should handle port listing error"},{"ancestorTitles":["SerialManager Basic Tests","CRC validation through sensorParser"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests CRC validation through sensorParser should validate correct CRC in sensor data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707258805,"status":"passed","title":"should validate correct CRC in sensor data"},{"ancestorTitles":["SerialManager Basic Tests","CRC validation through sensorParser"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests CRC validation through sensorParser should reject data with invalid CRC","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707258806,"status":"passed","title":"should reject data with invalid CRC"},{"ancestorTitles":["SerialManager Basic Tests","CRC validation through sensorParser"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests CRC validation through sensorParser should reject data without CRC","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707258811,"status":"passed","title":"should reject data without CRC"},{"ancestorTitles":["SerialManager Basic Tests","Sensor data parsing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests Sensor data parsing should parse valve limit switch data correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707258812,"status":"passed","title":"should parse valve limit switch data correctly"},{"ancestorTitles":["SerialManager Basic Tests","Sensor data parsing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests Sensor data parsing should parse mixed sensor and valve data","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707258813,"status":"passed","title":"should parse mixed sensor and valve data"},{"ancestorTitles":["SerialManager Basic Tests","Sensor data parsing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests Sensor data parsing should handle malformed sensor data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258814,"status":"passed","title":"should handle malformed sensor data"},{"ancestorTitles":["SerialManager Basic Tests","System message handling"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests System message handling should skip CRC validation for system messages","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"startAt":1755707258815,"status":"passed","title":"should skip CRC validation for system messages"},{"ancestorTitles":["SerialManager Basic Tests","Pressure limit detection"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests Pressure limit detection should detect pressure limit exceedance","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258817,"status":"passed","title":"should detect pressure limit exceedance"},{"ancestorTitles":["SerialManager Basic Tests","Error resilience"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests Error resilience should handle empty sensor data gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258819,"status":"passed","title":"should handle empty sensor data gracefully"},{"ancestorTitles":["SerialManager Basic Tests","Error resilience"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests Error resilience should handle corrupted data gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258820,"status":"passed","title":"should handle corrupted data gracefully"},{"ancestorTitles":["SerialManager Basic Tests","Error resilience"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SerialManager Basic Tests Error resilience should continue processing valid parts despite some errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707258821,"status":"passed","title":"should continue processing valid parts despite some errors"}],"endTime":1755707258824,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\SerialManager.basic.test.ts","startTime":1755707258591,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["transformPayload"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"transformPayload should transform CMD,ValveName,Open to V,index,O","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258963,"status":"passed","title":"should transform CMD,ValveName,Open to V,index,O"},{"ancestorTitles":["transformPayload"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"transformPayload should transform CMD,ValveName,Close to V,index,C","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258965,"status":"passed","title":"should transform CMD,ValveName,Close to V,index,C"},{"ancestorTitles":["transformPayload"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"transformPayload should return original payload for V commands","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258966,"status":"passed","title":"should return original payload for V commands"},{"ancestorTitles":["transformPayload"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"transformPayload should return original payload for SLEEP commands","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258966,"status":"passed","title":"should return original payload for SLEEP commands"},{"ancestorTitles":["transformPayload"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"transformPayload should return original payload for S commands","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258967,"status":"passed","title":"should return original payload for S commands"},{"ancestorTitles":["transformPayload"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"transformPayload should throw error for unknown valve name in CMD command","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707258967,"status":"passed","title":"should throw error for unknown valve name in CMD command"},{"ancestorTitles":["transformPayload"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"transformPayload should return original payload for other raw commands","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707258974,"status":"passed","title":"should return original payload for other raw commands"}],"endTime":1755707258975,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\cmdTransform.test.ts","startTime":1755707258866,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Emergency Handling Enhancements","SerialManager abort APIs"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements SerialManager abort APIs should abort inflight message with reason","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259100,"status":"passed","title":"should abort inflight message with reason"},{"ancestorTitles":["Emergency Handling Enhancements","SerialManager abort APIs"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements SerialManager abort APIs should abort all pending messages","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259102,"status":"passed","title":"should abort all pending messages"},{"ancestorTitles":["Emergency Handling Enhancements","SerialManager abort APIs"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements SerialManager abort APIs should handle abort when no inflight message exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259103,"status":"passed","title":"should handle abort when no inflight message exists"},{"ancestorTitles":["Emergency Handling Enhancements","EMERG transmission halt"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements EMERG transmission halt should halt transmission on EMERG signal","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707259103,"status":"passed","title":"should halt transmission on EMERG signal"},{"ancestorTitles":["Emergency Handling Enhancements","EMERG transmission halt"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements EMERG transmission halt should clear emergency state on EMERG_CLEARED","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259104,"status":"passed","title":"should clear emergency state on EMERG_CLEARED"},{"ancestorTitles":["Emergency Handling Enhancements","FAILSAFE latch and cooldown"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements FAILSAFE latch and cooldown should implement cooldown to prevent multiple failsafe calls","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259104,"status":"passed","title":"should implement cooldown to prevent multiple failsafe calls"},{"ancestorTitles":["Emergency Handling Enhancements","FAILSAFE latch and cooldown"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements FAILSAFE latch and cooldown should execute FAILSAFE commands in correct sequence (CLOSE-OPEN-OPEN)","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707259105,"status":"passed","title":"should execute FAILSAFE commands in correct sequence (CLOSE-OPEN-OPEN)"},{"ancestorTitles":["Emergency Handling Enhancements","FAILSAFE latch and cooldown"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements FAILSAFE latch and cooldown should maintain latch when emergency is active","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259106,"status":"passed","title":"should maintain latch when emergency is active"},{"ancestorTitles":["Emergency Handling Enhancements","FAILSAFE latch and cooldown"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements FAILSAFE latch and cooldown should clear latch when emergency is not active","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259106,"status":"passed","title":"should clear latch when emergency is not active"},{"ancestorTitles":["Emergency Handling Enhancements","HeartbeatDaemon control"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements HeartbeatDaemon control should stop heartbeat daemon on EMERG","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259107,"status":"passed","title":"should stop heartbeat daemon on EMERG"},{"ancestorTitles":["Emergency Handling Enhancements","HeartbeatDaemon control"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements HeartbeatDaemon control should start heartbeat daemon on EMERG_CLEARED","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259108,"status":"passed","title":"should start heartbeat daemon on EMERG_CLEARED"},{"ancestorTitles":["Emergency Handling Enhancements","toSteps safety guards"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements toSteps safety guards should not create time-wait step for delay <= 0","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259108,"status":"passed","title":"should not create time-wait step for delay <= 0"},{"ancestorTitles":["Emergency Handling Enhancements","toSteps safety guards"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements toSteps safety guards should handle unknown commands gracefully with warning","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259109,"status":"passed","title":"should handle unknown commands gracefully with warning"},{"ancestorTitles":["Emergency Handling Enhancements","Chart ReferenceLine improvements"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements Chart ReferenceLine improvements should protect against NaN/negative values in yMax calculation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259109,"status":"passed","title":"should protect against NaN/negative values in yMax calculation"},{"ancestorTitles":["Emergency Handling Enhancements","Chart ReferenceLine improvements"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements Chart ReferenceLine improvements should generate correct reference lines with labels and colors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259110,"status":"passed","title":"should generate correct reference lines with labels and colors"},{"ancestorTitles":["Emergency Handling Enhancements","Chart ReferenceLine improvements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements Chart ReferenceLine improvements should handle missing alarm/trip gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259111,"status":"passed","title":"should handle missing alarm/trip gracefully"},{"ancestorTitles":["Emergency Handling Enhancements","Integration test - Complete emergency flow"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Handling Enhancements Integration test - Complete emergency flow should handle complete emergency sequence","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1755707259111,"status":"passed","title":"should handle complete emergency sequence"}],"endTime":1755707259114,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\EmergencyEnhancements.test.ts","startTime":1755707258982,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Emergency Paths","Pressure limit detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Pressure limit detection should trigger emergency on pressure trip limit","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259293,"status":"passed","title":"should trigger emergency on pressure trip limit"},{"ancestorTitles":["Emergency Paths","Pressure limit detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Pressure limit detection should trigger emergency on pressure alarm limit","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259294,"status":"passed","title":"should trigger emergency on pressure alarm limit"},{"ancestorTitles":["Emergency Paths","Pressure limit detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Pressure limit detection should trigger emergency on excessive pressure rate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259295,"status":"passed","title":"should trigger emergency on excessive pressure rate"},{"ancestorTitles":["Emergency Paths","Pressure limit detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Pressure limit detection should not trigger on normal conditions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259295,"status":"passed","title":"should not trigger on normal conditions"},{"ancestorTitles":["Emergency Paths","Pressure limit detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Pressure limit detection should prioritize trip over alarm","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259296,"status":"passed","title":"should prioritize trip over alarm"},{"ancestorTitles":["Emergency Paths","Emergency valve selection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Emergency valve selection should generate correct emergency commands","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1755707259296,"status":"passed","title":"should generate correct emergency commands"},{"ancestorTitles":["Emergency Paths","Emergency valve selection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Emergency valve selection should handle missing valve mappings gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707259296,"status":"passed","title":"should handle missing valve mappings gracefully"},{"ancestorTitles":["Emergency Paths","Heartbeat monitoring"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Heartbeat monitoring should detect heartbeat timeout","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259297,"status":"passed","title":"should detect heartbeat timeout"},{"ancestorTitles":["Emergency Paths","Heartbeat monitoring"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Heartbeat monitoring should not timeout with regular heartbeats","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259297,"status":"passed","title":"should not timeout with regular heartbeats"},{"ancestorTitles":["Emergency Paths","Renderer independence"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Renderer independence should maintain emergency state without renderer","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259298,"status":"passed","title":"should maintain emergency state without renderer"},{"ancestorTitles":["Emergency Paths","Renderer independence"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Renderer independence should prevent emergency re-entry","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259298,"status":"passed","title":"should prevent emergency re-entry"},{"ancestorTitles":["Emergency Paths","Renderer independence"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Renderer independence should allow reset and re-trigger","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707259299,"status":"passed","title":"should allow reset and re-trigger"},{"ancestorTitles":["Emergency Paths","Multi-path emergency triggers"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Multi-path emergency triggers should trigger on any emergency condition","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1755707259299,"status":"passed","title":"should trigger on any emergency condition"},{"ancestorTitles":["Emergency Paths","Multi-path emergency triggers"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Emergency Paths Multi-path emergency triggers should not trigger when all conditions are normal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259300,"status":"passed","title":"should not trigger when all conditions are normal"}],"endTime":1755707259301,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\EmergencyPaths.test.ts","startTime":1755707259140,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Sequence Validation Logic","Static validation (same step)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Static validation (same step) should reject ethanol main + N2O main in same step","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259413,"status":"passed","title":"should reject ethanol main + N2O main in same step"},{"ancestorTitles":["Sequence Validation Logic","Static validation (same step)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Static validation (same step) should reject ethanol main + system vent in same step","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259414,"status":"passed","title":"should reject ethanol main + system vent in same step"},{"ancestorTitles":["Sequence Validation Logic","Static validation (same step)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Static validation (same step) should reject pressurant fill + system vent in same step","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259415,"status":"passed","title":"should reject pressurant fill + system vent in same step"},{"ancestorTitles":["Sequence Validation Logic","Static validation (same step)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Static validation (same step) should allow safe combinations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259415,"status":"passed","title":"should allow safe combinations"},{"ancestorTitles":["Sequence Validation Logic","Static validation (same step)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Static validation (same step) should allow emergency combinations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259415,"status":"passed","title":"should allow emergency combinations"},{"ancestorTitles":["Sequence Validation Logic","Dynamic validation (across timeline)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Dynamic validation (across timeline) should detect forbidden state across steps","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1755707259416,"status":"passed","title":"should detect forbidden state across steps"},{"ancestorTitles":["Sequence Validation Logic","Dynamic validation (across timeline)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Dynamic validation (across timeline) should allow sequential opening if first is closed","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259416,"status":"passed","title":"should allow sequential opening if first is closed"},{"ancestorTitles":["Sequence Validation Logic","Dynamic validation (across timeline)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Dynamic validation (across timeline) should handle complex state transitions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1755707259417,"status":"passed","title":"should handle complex state transitions"},{"ancestorTitles":["Sequence Validation Logic","Dynamic validation (across timeline)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Dynamic validation (across timeline) should handle multiple forbidden states in sequence","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259417,"status":"passed","title":"should handle multiple forbidden states in sequence"},{"ancestorTitles":["Sequence Validation Logic","Emergency sequences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Emergency sequences should allow emergency shutdown patterns","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259417,"status":"passed","title":"should allow emergency shutdown patterns"},{"ancestorTitles":["Sequence Validation Logic","Emergency sequences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Emergency sequences should allow emergency shutdown from dangerous state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259418,"status":"passed","title":"should allow emergency shutdown from dangerous state"},{"ancestorTitles":["Sequence Validation Logic","Edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Edge cases should handle empty commands","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259418,"status":"passed","title":"should handle empty commands"},{"ancestorTitles":["Sequence Validation Logic","Edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Edge cases should handle malformed commands gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1755707259418,"status":"passed","title":"should handle malformed commands gracefully"},{"ancestorTitles":["Sequence Validation Logic","Edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sequence Validation Logic Edge cases should handle close-then-open in same step","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259419,"status":"passed","title":"should handle close-then-open in same step"}],"endTime":1755707259420,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\SequenceValidation.test.ts","startTime":1755707259309,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CRC Helper"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CRC Helper should have tests in the future","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1755707259478,"status":"passed","title":"should have tests in the future"}],"endTime":1755707259480,"message":"","name":"C:\\Users\\신정호\\Gorocket-Control-System-GUI\\__tests__\\crcHelper.js","startTime":1755707259426,"status":"passed","summary":""}],"wasInterrupted":false}
